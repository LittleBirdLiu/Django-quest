#coding=utf-8
from datetime import datetime

import redis
from quest.models import Event,QustionFollow
from redishelper.util import (connect,get_next_question_id,get_next_answer_id,get_next_comment_id,get_next_question_follow_id,
        get_next_answer_evaluation_id,get_next_comment_evaluation_id,get_datetime)

 

QUESTION_DB_NUM=3
TIME_LINE_DB_NUM=2
USER_INFO_DB_NUM=1

QUESTION_FOLLOWER_PREFIX="question_follower:"#问题的关注者set
QUESTION_PRFIX="question:"#问题信息 hash
ANSWER_PRFIX="answer:"#答案 hash
COMMENT_PRFIX="comment:"#评论hash
QUESTION_PRFIX="followquestion:"#问题关注hash

ANSWEREVALUATION_PRFIX="answerevaluation:"#评价 hash
OPPOSE_ANSWEREVALUATION_PRFIX="fanswerevaluation:"#赞成问题的用户id set
FAVOUR_ANSWEREVALUATION_PRFIX="panswerevaluation:"
QUESTION_ANSWER_PREFIX="question_answer:"#问题的回答id列表
ANSWER_COMMENT_PREFIX="answer_comment:"#回答的评论id列表
ANSWER_EVALUATION_PREFIX="answer_evaluation:"

CURRENT_QUESTION_ID_PREDIX="current_question_id"
CURRENT_ANSWER_ID_PREDIX="current_answer_id"
CURRENT_COMMENT_ID_PREDIX="current_comment_id"
CURRENT_QUESTION_FOLLOW_ID_PREDIX="current_question_follow_id"
CURRENT_ANSWER_EVALUATION_ID_PREDIX="current_answer_evaluation_id"
CURRENT_COMMENT_EVALUATION_ID_PREDIX="current_comment_evaluation_id"
USER_FAVOR_ANSWER_PREFIX="answer_favor:" #用户赞过的问题set
USER_OPPOSE_ANSWER_PREFIX="answer_oppose:"#用户反对过得问题set
USER_FOLLOW_QUESTION_PREFIX="qfollow:"
USER_EVENT_TIME_LINE_PREFIX="event_time_line:"
USER_EVENT_PREFIX="event:"

TEMP_PREFIX="temp:"
TIME_STRF="%Y/%m/%d %H:%M:%S"
FAVOR_ANSWER=1
OPPOSE_ANSWER=2

def load_question_follower(question_id):
    client=connect(QUESTION_DB_NUM)
    if not client.exists(QUESTION_FOLLOWER_PREFIX+str(question_id)):
        users=QustionFollow.objects.filter(question_id=question_id).values("user_id")
        users_id=[v for user in users for _,v in user.items()]
        users_id.append(-1)
        client.sadd(QUESTION_FOLLOWER_PREFIX+str(question_id),*users_id)
        users_id.remove(-1)
        return set(users_id)
    users_set=client.smembers(QUESTION_FOLLOWER_PREFIX+str(question_id))
    users_set.remove(-1)
    return users_set

def get_question_follower(question_id):
    #import pdb;pdb.set_trace()
    client=connect(QUESTION_DB_NUM)
    if not client.exists(QUESTION_FOLLOWER_PREFIX+str(question_id)):
        return load_question_follower(question_id)
    users_set=client.smembers(QUESTION_FOLLOWER_PREFIX+str(question_id))
    #users_set.remove(-1)
    users_set.remove("-1")
    return users_set
